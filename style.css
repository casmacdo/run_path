body {
    margin: 0;
    padding: 0;
}

#map {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 100%;
}

.rounded-rect {
    background: white;
    border-radius: 10px;
    box-shadow: 0 0 50px -25px black;
}

.flex-center {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
}

.flex-center.left {
    left: 0px;
}

.flex-center.right {
    right: 0px;
}

.sidebar-content {
    position: absolute;
    width: 95%;
    height: 95%;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 32px;
    color: gray;
}

.sidebar-toggle {
    position: absolute;
    width: 1.3em;
    height: 1.3em;
    overflow: visible;
    display: flex;
    justify-content: center;
    align-items: center;
}

.sidebar-toggle.left {
    right: -1.5em;
}

.sidebar-toggle.right {
    left: -1.5em;
}

.sidebar-toggle:hover {
    color: #0aa1cf;
    cursor: pointer;
}

.sidebar {
    transition: transform 1s;
    z-index: 1;
    width: 300px;
    height: 100%;
}

/*
    The sidebar styling has them "expanded" by default, we use CSS transforms to push them offscreen
    The toggleSidebar() function removes this class from the element in order to expand it.
    */
.left.collapsed {
    transform: translateX(-295px);
}

.right.collapsed {
    transform: translateX(295px);
}

/* 

This took a while to figure out. The key seems to be absolute and relative positioning. 
I wanted to position the audio player at the bottom-center of the page. 
To do this, I wrapped the waveform div in two divs. 
The outer div has absolute positioning, which means that it can be placed anywhere in the viewport. 
I made the outer div fill the entire width of the screen and positioned it at the bottom. 
In addition, I set the z-index to 1, which palces it on top of the map and makes it possible for the user to interact with the waveform, rather than the map. 
The wave-inner div has relative positioning, which means that it is positioned relative to the div that contains it. 
This inner div has its width set to 100% and margin set to auto.
If I wanted to have the inner div take up less of the screen and be centered, I would change the width and keep the margin setting. 

*/

#wave-inner{
    position: relative;
    width: 100%;
    margin:auto
}

#wave-outer {
    position: absolute;
    width: 100%;
    bottom: 0;
    z-index: 1;
}


